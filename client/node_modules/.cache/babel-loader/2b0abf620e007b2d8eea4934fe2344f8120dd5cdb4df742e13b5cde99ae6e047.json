{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saura\\\\Project\\\\client\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App.js\";\nimport authReducer from \"./state/index.js\";\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from \"react-redux\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\n//import { storage } from \"redux-persist/lib/storage/\";\nimport storageSession from 'redux-persist/es/storage/session';\nimport { PersistGate } from 'redux-persist/es/integration/react';\n// import persistReducer from 'redux-persist/es/persistReducer';\n// import { getDefaultNormalizer } from \"@testing-library/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst persistConfig = {\n  key: \"root\",\n  storage: storageSession,\n  version: 1\n};\nconst persistedReducer = persistReducer(persistConfig, authReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(PersistGate, {\n      loading: null,\n      persistor: persistStore(store),\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 65\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 13\n}, this));","map":{"version":3,"names":["React","ReactDOM","App","authReducer","configureStore","Provider","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storageSession","PersistGate","persistConfig","key","storage","version","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","root","createRoot","document","getElementById","render"],"sources":["C:/Users/saura/Project/client/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App.js\";\nimport authReducer from \"./state/index.js\";\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from \"react-redux\";\nimport {\n  persistStore, \n  persistReducer, \n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER\n} from \"redux-persist\";\n//import { storage } from \"redux-persist/lib/storage/\";\nimport storageSession from 'redux-persist/es/storage/session'\nimport { PersistGate } from 'redux-persist/es/integration/react';\n// import persistReducer from 'redux-persist/es/persistReducer';\n// import { getDefaultNormalizer } from \"@testing-library/react\";\n\nconst persistConfig = { key: \"root\", storage: storageSession, version:1};\nconst persistedReducer = persistReducer(persistConfig, authReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) => \n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nroot.render(<React.StrictMode>\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistStore(store)}><App /></PersistGate>\n  </Provider>\n  </React.StrictMode>);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,UAAU;AAC1B,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB;AACA,OAAOC,cAAc,MAAM,kCAAkC;AAC7D,SAASC,WAAW,QAAQ,oCAAoC;AAChE;AACA;AAAA;AAEA,MAAMC,aAAa,GAAG;EAAEC,GAAG,EAAE,MAAM;EAAEC,OAAO,EAAEJ,cAAc;EAAEK,OAAO,EAAC;AAAC,CAAC;AACxE,MAAMC,gBAAgB,GAAGb,cAAc,CAACS,aAAa,EAAEb,WAAW,CAAC;AACnE,MAAMkB,KAAK,GAAGjB,cAAc,CAAC;EAC3BkB,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAAClB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,MAAMc,IAAI,GAAG1B,QAAQ,CAAC2B,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AAEjEH,IAAI,CAACI,MAAM,eAAC,QAAC,KAAK,CAAC,UAAU;EAAA,uBAC3B,QAAC,QAAQ;IAAC,KAAK,EAAEV,KAAM;IAAA,uBACrB,QAAC,WAAW;MAAC,OAAO,EAAE,IAAK;MAAC,SAAS,EAAEf,YAAY,CAACe,KAAK,CAAE;MAAA,uBAAC,QAAC,GAAG;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA;EAAc;IAAA;IAAA;IAAA;EAAA;AACxE;EAAA;EAAA;EAAA;AAAA,QACQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}